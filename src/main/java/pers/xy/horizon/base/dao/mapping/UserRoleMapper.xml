<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pers.xy.horizon.base.dao.UserRoleMapper">
  <resultMap id="BaseResultMap" type="pers.xy.horizon.base.entity.UserRole">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="add_time" jdbcType="BIGINT" property="addTime" />
    <result column="delete_time" jdbcType="BIGINT" property="deleteTime" />
    <result column="is_delete" jdbcType="VARCHAR" property="isDelete" />
    <result column="update_time" jdbcType="BIGINT" property="updateTime" />
    <result column="role" jdbcType="BIGINT" property="role" />
    <result column="user" jdbcType="BIGINT" property="user" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, add_time, delete_time, is_delete, update_time, role, user
  </sql>
  <select id="selectByExample" parameterType="pers.xy.horizon.base.entity.UserRoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_userrole
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="pers.xy.horizon.base.entity.UserRoleExample">
    delete from t_userrole
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert"  keyProperty="id" useGeneratedKeys="true" parameterType="pers.xy.horizon.base.entity.UserRole">
    insert into t_userrole (id, add_time, delete_time, 
      is_delete, update_time, role, 
      user)
    values (#{id,jdbcType=BIGINT}, #{addTime,jdbcType=BIGINT}, #{deleteTime,jdbcType=BIGINT}, 
      #{isDelete,jdbcType=VARCHAR}, #{updateTime,jdbcType=BIGINT}, #{role,jdbcType=BIGINT}, 
      #{user,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective"  keyProperty="id" useGeneratedKeys="true" parameterType="pers.xy.horizon.base.entity.UserRole">
    insert into t_userrole
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="user != null">
        user,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=BIGINT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=BIGINT},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=BIGINT},
      </if>
      <if test="role != null">
        #{role,jdbcType=BIGINT},
      </if>
      <if test="user != null">
        #{user,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="pers.xy.horizon.base.entity.UserRoleExample" resultType="java.lang.Long">
    select count(*) from t_userrole
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_userrole
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=BIGINT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=BIGINT},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=BIGINT},
      </if>
      <if test="record.role != null">
        role = #{record.role,jdbcType=BIGINT},
      </if>
      <if test="record.user != null">
        user = #{record.user,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_userrole
    set id = #{record.id,jdbcType=BIGINT},
      add_time = #{record.addTime,jdbcType=BIGINT},
      delete_time = #{record.deleteTime,jdbcType=BIGINT},
      is_delete = #{record.isDelete,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=BIGINT},
      role = #{record.role,jdbcType=BIGINT},
      user = #{record.user,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <select id="selectByUserId" parameterType="long" resultMap="UserRoleDto">
    select
        ur.id as ur_id,
    <include refid="CommonMapper.userCommon"></include>,
    <include refid="CommonMapper.roleCommon"></include>
    from t_userrole ur right join t_role r on ur.role = r.id
        right join t_user u on ur.user = u.id
    where u.id = #{userId}
  </select>

  <resultMap id="UserRoleDto" type="pers.xy.horizon.base.dto.UserRoleDto">
    <result column="u_id" jdbcType="BIGINT" property="id" />
    <result column="r_id" jdbcType="BIGINT" property="role.id" />
    <result column="r_code" jdbcType="BIGINT" property="role.code" />
    <result column="r_name" jdbcType="BIGINT" property="role.name" />
    <result column="u_loginName" jdbcType="BIGINT" property="user.loginName" />
    <result column="u_userName" jdbcType="BIGINT" property="user.userName" />
    <result column="u_id" jdbcType="BIGINT" property="user.id" />
  </resultMap>


</mapper>